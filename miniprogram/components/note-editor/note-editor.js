"use strict";
Component({
    properties: {},
    data: {
        readOnly: false,
        placeholder: "开始笔记",
        usingKeyboard: false,
        focusing: false
    },
    lifetimes: {
        attached: function () {
            var platform = wx.getSystemInfoSync().platform;
            var isIOS = platform === 'ios';
            this.setData({ isIOS: isIOS });
            var that = this;
            this.toggleShowTooltip(0);
            var keyboardHeight = 0;
            wx.onKeyboardHeightChange(function (res) {
                if (res.height === keyboardHeight)
                    return;
                var duration = res.height > 0 ? res.duration * 1000 : 0;
                keyboardHeight = res.height;
                setTimeout(function () {
                    wx.pageScrollTo({
                        scrollTop: 0,
                        success: function () {
                            that.toggleShowTooltip(keyboardHeight);
                            that.data.editorCtx.scrollIntoView();
                        }
                    });
                }, duration);
            });
        }
    },
    methods: {
        readOnlyChange: function () {
            this.setData({
                readOnly: !this.data.readOnly
            });
        },
        calNavigationBarAndStatusBar: function () {
            var systemInfo = wx.getSystemInfoSync();
            var statusBarHeight = systemInfo.statusBarHeight, platform = systemInfo.platform;
            var isIOS = platform === 'ios';
            var navigationBarHeight = isIOS ? 44 : 48;
            return statusBarHeight + navigationBarHeight;
        },
        onEditorReady: function () {
            var that = this;
            that.createSelectorQuery().select('#editor').context(function (res) {
                that.setData({ editorCtx: res.context });
            }).exec();
        },
        focus: function () {
            this.setData({ focusing: true });
        },
        blur: function () {
            this.setData({ focusing: false });
        },
        format: function (e) {
            var _a = e.target.dataset, name = _a.name, value = _a.value;
            if (!name)
                return;
            this.data.editorCtx.format(name, value);
        },
        onStatusChange: function (e) {
            var formats = e.detail;
            this.setData({ formats: formats });
        },
        insertDivider: function () {
            this.data.editorCtx.insertDivider({
                success: function () {
                    console.log('insert divider success');
                }
            });
        },
        clear: function () {
            this.data.editorCtx.clear({
                success: function () {
                    console.log("clear success");
                }
            });
        },
        removeFormat: function () {
            this.data.editorCtx.removeFormat();
        },
        insertDate: function () {
            var date = new Date();
            var formatDate = date.getFullYear() + "/" + (date.getMonth() + 1) + "/" + date.getDate();
            this.data.editorCtx.insertText({
                text: formatDate
            });
        },
        insertImage: function () {
            var that = this;
            wx.chooseImage({
                count: 1,
                success: function (res) {
                    that.data.editorCtx.insertImage({
                        src: res.tempFilePaths[0],
                        data: {
                            id: 'abcd',
                            role: 'god'
                        },
                        width: '80%',
                        success: function () {
                            console.log('insert image success');
                        }
                    });
                }
            });
        },
        toggleShowTooltip: function (keyboardHeight) {
            if (!this.data.focusing) {
                this.setData({ usingKeyboard: false });
                return;
            }
            this.setData({ usingKeyboard: keyboardHeight > 0 });
        }
    }
});
//# sourceMappingURL=data:application/json;base64,