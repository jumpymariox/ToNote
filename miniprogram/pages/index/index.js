"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var note_service_1 = require("../../service/note.service");
Page({
    data: {
        showAddBtn: true,
        showDeleteBtn: false,
        showUndoBtn: false,
        editting: false,
        notes: [],
        selectedNoteIds: []
    },
    onLoad: function () {
        this.fetchAndSetNotes();
    },
    createNote: function () {
        wx.navigateTo({ url: "/pages/note/note" });
    },
    readyToEditNotes: function () {
        this.setData({
            showAddBtn: false,
            showDeleteBtn: true,
            showUndoBtn: true,
            editting: true
        });
    },
    cancelEditNotes: function () {
        this.setData({
            showAddBtn: true,
            showDeleteBtn: false,
            showUndoBtn: false,
            editting: false
        });
    },
    deleteNotes: function () {
        var _this = this;
        this.cancelEditNotes();
        note_service_1.noteService.deleteNotes(this.data.selectedNoteIds).then(function () {
            _this.fetchAndSetNotes();
        });
    },
    selectedNotesChange: function (e) {
        this.setData({ selectedNoteIds: e.detail.selectedNoteIds });
    },
    fetchAndSetNotes: function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            note_service_1.noteService.fetchNotes().then(function (_a) {
                var notes = _a.notes;
                _this.setData({ notes: notes });
                resolve();
            }).catch(reject);
        });
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLDJEQUF3RDtBQXNCeEQsSUFBSSxDQUE2QjtJQUMvQixJQUFJLEVBQUU7UUFDSixVQUFVLEVBQUUsSUFBSTtRQUNoQixhQUFhLEVBQUUsS0FBSztRQUNwQixXQUFXLEVBQUUsS0FBSztRQUNsQixRQUFRLEVBQUUsS0FBSztRQUNmLEtBQUssRUFBRSxFQUFFO1FBQ1QsZUFBZSxFQUFFLEVBQUU7S0FDcEI7SUFDRCxNQUFNO1FBQ0osSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7SUFDMUIsQ0FBQztJQUNELFVBQVU7UUFDUixFQUFFLENBQUMsVUFBVSxDQUFDLEVBQUUsR0FBRyxFQUFFLGtCQUFrQixFQUFFLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBQ0QsZ0JBQWdCO1FBQ2QsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNYLFVBQVUsRUFBRSxLQUFLO1lBQ2pCLGFBQWEsRUFBRSxJQUFJO1lBQ25CLFdBQVcsRUFBRSxJQUFJO1lBQ2pCLFFBQVEsRUFBRSxJQUFJO1NBQ2YsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUVELGVBQWU7UUFDYixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1gsVUFBVSxFQUFFLElBQUk7WUFDaEIsYUFBYSxFQUFFLEtBQUs7WUFDcEIsV0FBVyxFQUFFLEtBQUs7WUFDbEIsUUFBUSxFQUFFLEtBQUs7U0FDaEIsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUVELFdBQVc7UUFBWCxpQkFLQztRQUpDLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUN2QiwwQkFBVyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUN0RCxLQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztRQUMxQixDQUFDLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFFRCxtQkFBbUIsWUFBQyxDQUFNO1FBQ3hCLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxlQUFlLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxlQUFlLEVBQUUsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFFRCxnQkFBZ0IsRUFBaEI7UUFBQSxpQkFPQztRQU5DLE9BQU8sSUFBSSxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUUsTUFBTTtZQUNqQywwQkFBVyxDQUFDLFVBQVUsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFDLEVBQTRCO29CQUExQixnQkFBSztnQkFDcEMsS0FBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO2dCQUMvQixPQUFPLEVBQUUsQ0FBQztZQUNaLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUNsQixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbmRleC50c1xuaW1wb3J0IHsgbm90ZVNlcnZpY2UgfSBmcm9tIFwiLi4vLi4vc2VydmljZS9ub3RlLnNlcnZpY2VcIlxuXG5uYW1lc3BhY2UgSW5kZXgge1xuICBleHBvcnQgdHlwZSBJRGF0YSA9IHtcbiAgICBzaG93QWRkQnRuOiBib29sZWFuLFxuICAgIHNob3dEZWxldGVCdG46IGJvb2xlYW4sXG4gICAgc2hvd1VuZG9CdG46IGJvb2xlYW4sXG4gICAgZWRpdHRpbmc6IGJvb2xlYW4sXG4gICAgbm90ZXM6IE5vdGVbXSxcbiAgICBzZWxlY3RlZE5vdGVJZHM6IHN0cmluZ1tdXG4gIH1cbiAgZXhwb3J0IHR5cGUgSUN1c3RvbSA9IHtcbiAgICBjcmVhdGVOb3RlOiAoKSA9PiB2b2lkLFxuICAgIHJlYWR5VG9FZGl0Tm90ZXM6ICgpID0+IHZvaWQsXG4gICAgY2FuY2VsRWRpdE5vdGVzOiAoKSA9PiB2b2lkLFxuICAgIGRlbGV0ZU5vdGVzOiAoKSA9PiB2b2lkLFxuICAgIHNlbGVjdGVkTm90ZXNDaGFuZ2U6IChlOiBhbnkpID0+IHZvaWQsXG4gICAgZmV0Y2hBbmRTZXROb3RlczogKCkgPT4gUHJvbWlzZTx2b2lkPlxuICB9XG59XG5cbi8vIOiOt+WPluW6lOeUqOWunuS+i1xuUGFnZTxJbmRleC5JRGF0YSwgSW5kZXguSUN1c3RvbT4oe1xuICBkYXRhOiB7XG4gICAgc2hvd0FkZEJ0bjogdHJ1ZSxcbiAgICBzaG93RGVsZXRlQnRuOiBmYWxzZSxcbiAgICBzaG93VW5kb0J0bjogZmFsc2UsXG4gICAgZWRpdHRpbmc6IGZhbHNlLFxuICAgIG5vdGVzOiBbXSxcbiAgICBzZWxlY3RlZE5vdGVJZHM6IFtdXG4gIH0sXG4gIG9uTG9hZCgpIHtcbiAgICB0aGlzLmZldGNoQW5kU2V0Tm90ZXMoKTtcbiAgfSxcbiAgY3JlYXRlTm90ZSgpIHtcbiAgICB3eC5uYXZpZ2F0ZVRvKHsgdXJsOiBcIi9wYWdlcy9ub3RlL25vdGVcIiB9KTtcbiAgfSxcbiAgcmVhZHlUb0VkaXROb3RlcygpIHtcbiAgICB0aGlzLnNldERhdGEoe1xuICAgICAgc2hvd0FkZEJ0bjogZmFsc2UsXG4gICAgICBzaG93RGVsZXRlQnRuOiB0cnVlLFxuICAgICAgc2hvd1VuZG9CdG46IHRydWUsXG4gICAgICBlZGl0dGluZzogdHJ1ZVxuICAgIH0pXG4gIH0sXG5cbiAgY2FuY2VsRWRpdE5vdGVzKCkge1xuICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICBzaG93QWRkQnRuOiB0cnVlLFxuICAgICAgc2hvd0RlbGV0ZUJ0bjogZmFsc2UsXG4gICAgICBzaG93VW5kb0J0bjogZmFsc2UsXG4gICAgICBlZGl0dGluZzogZmFsc2VcbiAgICB9KVxuICB9LFxuXG4gIGRlbGV0ZU5vdGVzKCkge1xuICAgIHRoaXMuY2FuY2VsRWRpdE5vdGVzKCk7XG4gICAgbm90ZVNlcnZpY2UuZGVsZXRlTm90ZXModGhpcy5kYXRhLnNlbGVjdGVkTm90ZUlkcykudGhlbigoKSA9PiB7XG4gICAgICB0aGlzLmZldGNoQW5kU2V0Tm90ZXMoKTtcbiAgICB9KVxuICB9LFxuXG4gIHNlbGVjdGVkTm90ZXNDaGFuZ2UoZTogYW55KSB7XG4gICAgdGhpcy5zZXREYXRhKHsgc2VsZWN0ZWROb3RlSWRzOiBlLmRldGFpbC5zZWxlY3RlZE5vdGVJZHMgfSk7XG4gIH0sXG5cbiAgZmV0Y2hBbmRTZXROb3RlcygpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgbm90ZVNlcnZpY2UuZmV0Y2hOb3RlcygpLnRoZW4oKHsgbm90ZXMgfTogeyBub3RlczogTm90ZVtdIH0pID0+IHtcbiAgICAgICAgdGhpcy5zZXREYXRhKHsgbm90ZXM6IG5vdGVzIH0pO1xuICAgICAgICByZXNvbHZlKCk7XG4gICAgICB9KS5jYXRjaChyZWplY3QpXG4gICAgfSk7XG4gIH1cbn0pXG4iXX0=